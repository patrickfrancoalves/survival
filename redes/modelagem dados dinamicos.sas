/*LIBNAME SURVIV "C:\Users\b2073208\Documents\Bases_Lattes";*/
LIBNAME SURVIV "C:\Users\patri\OneDrive\Área de Trabalho\corr potec";
OPTIONS COMPRESS=YES;


PROC CONTENTS DATA=SURVIV.TABELA_PETROX NOPRINT OUT=C(KEEP=NAME);
RUN;


/*---------------------------------------------------------------------*/
/*--                   TRATAMENTO DOS DADOS                          --*/
/*---------------------------------------------------------------------*/


DATA SURVIV.TABELA_PETROX(COMPRESS=YES ENCODING=ANY DROP=UF_NASCIMENTO CONTINENTE SEXO LOCAL_FORMAC VINCULO
                          GRANDE_AREA TOT_COAUTOR UF_END_PROFISSIONAL IDADE_ACADEMICA DEDICACAO_EXCLUSIVA);
SET SURVIV.TABELA_PETRO;

     IF UF_NASCIMENTO IN ('SP','RJ','MG','ES')      THEN UF_NASCN=1;
ELSE IF UF_NASCIMENTO IN ('RS','PR','SC')           THEN UF_NASCN=2;
ELSE IF UF_NASCIMENTO IN ('DF','MS','GO','MT')      THEN UF_NASCN=3;
ELSE IF UF_NASCIMENTO IN ('AM','PA','RR','AC','RO') THEN UF_NASCN=4;
ELSE                                                     UF_NASCN=5;


     IF UF_END_PROFISSIONAL IN ('SP','RJ','MG','ES')      THEN UF_PROFN=1;
ELSE IF UF_END_PROFISSIONAL IN ('RS','PR','SC')           THEN UF_PROFN=2;
ELSE IF UF_END_PROFISSIONAL IN ('DF','MS','GO','MT')      THEN UF_PROFN=3;
ELSE IF UF_END_PROFISSIONAL IN ('AM','PA','RR','AC','RO') THEN UF_PROFN=4;
ELSE                                                           UF_PROFN=5;

     IF LOCAL_FORMAC IN ('USP')      THEN LOCAL_FORMACN=0;
ELSE IF LOCAL_FORMAC IN ('UNICAMP')  THEN LOCAL_FORMACN=1;
ELSE IF LOCAL_FORMAC IN ('UFRJ')     THEN LOCAL_FORMACN=2;
ELSE IF LOCAL_FORMAC IN ('UFMG')     THEN LOCAL_FORMACN=3;
ELSE IF LOCAL_FORMAC IN ('UFRGS')    THEN LOCAL_FORMACN=4;
ELSE IF LOCAL_FORMAC IN ('UFPA')     THEN LOCAL_FORMACN=5;
ELSE IF LOCAL_FORMAC IN ('PUC-RJ')   THEN LOCAL_FORMACN=6;
ELSE IF LOCAL_FORMAC IN ('UFSC')     THEN LOCAL_FORMACN=7;
ELSE IF LOCAL_FORMAC IN ('UFPE')     THEN LOCAL_FORMACN=8;
ELSE IF LOCAL_FORMAC IN ('UFPR')     THEN LOCAL_FORMACN=9;
ELSE IF LOCAL_FORMAC IN ('UFF')      THEN LOCAL_FORMACN=10;
ELSE IF LOCAL_FORMAC IN ('UFBA')     THEN LOCAL_FORMACN=11;
ELSE IF LOCAL_FORMAC IN ('UNESP')    THEN LOCAL_FORMACN=12;
ELSE IF LOCAL_FORMAC IN ('UFSCAR')   THEN LOCAL_FORMACN=13;
ELSE IF LOCAL_FORMAC IN ('UFC')      THEN LOCAL_FORMACN=14;
ELSE IF LOCAL_FORMAC IN ('UFU')      THEN LOCAL_FORMACN=15;
ELSE IF LOCAL_FORMAC IN ('UFCG')     THEN LOCAL_FORMACN=16;
ELSE IF LOCAL_FORMAC IN ('UFPB')     THEN LOCAL_FORMACN=17;
ELSE IF LOCAL_FORMAC IN ('UFES')     THEN LOCAL_FORMACN=18;
ELSE                                      LOCAL_FORMACN=19;


     IF GRANDE_AREA ='CIENCIAS_EXATAS_E_DA_TERRA' THEN GRANDE_AREAN=1;
ELSE IF GRANDE_AREA ='ENGENHARIAS'                THEN GRANDE_AREAN=2;
ELSE                                                   GRANDE_AREAN=3;


LN_ARTIGO_BRASIL     = LOG(SUM(ARTIGO_BRASIL,1));
LN_ARTIGO_EXTERIOR   = LOG(SUM(ARTIGO_EXTERIOR,1));
LN_LIVRO_BRASIL      = LOG(SUM(CAP_LIVRO_BRASIL,LIVRO_BRASIL,1));
LN_LIVRO_EXTERIOR    = LOG(SUM(CAP_LIVRO_EXTERIOR,LIVRO_EXTERIOR,1));
LN_LIVRO             = LOG(SUM(CAP_LIVRO_BRASIL,LIVRO_BRASIL,CAP_LIVRO_EXTERIOR,LIVRO_EXTERIOR,1));
LN_PATENTE_BRASIL    = LOG(SUM(PATENTE_BRASIL,1));
LN_PATENTE_EXTERIOR  = LOG(SUM(PATENTE_EXTERIOR,1));
LN_PATENTE           = LOG(SUM(PATENTE_BRASIL,PATENTE_EXTERIOR,1));


IF VINCULO ='SERVIDOR_PUBLICO' THEN VINCULON =0;ELSE VINCULON =1;
IF SEXO    ='F'                THEN SEXON    =1;ELSE SEXON    =0;
IF DIRECAO =1                  THEN DIRECAO  =1;ELSE DIRECAO  =0;
IF DEDICACAO_EXCLUSIVA ='SIM'  THEN EXCLUSIVA=1;ELSE EXCLUSIVA=0;

LN_IDADE       = LOG(SUM(IDADE_ACADEMICA,1));
LN_COAUTOR     = LOG(SUM(TOT_COAUTOR,1));
LN_CAPES       = LOG(SUM(NOTA_CAPES,1));

LN_ARTIGOS           = LOG(SUM(ARTIGO,1));
LN_ARTIGO_BRASIL     = LOG(SUM(ARTIGO_BRASIL,1));
LN_ARTIGO_EXTERIOR   = LOG(SUM(ARTIGO_EXTERIOR,1));

LN_LIVRO             = LOG(SUM(CAP_LIVRO,1));
LN_LIVRO_BRASIL      = LOG(SUM(CAP_LIVRO_BRASIL,1));
LN_LIVRO_EXTERIOR    = LOG(SUM(CAP_LIVRO_EXTERIOR,1));

LN_PATENTE           = LOG(SUM(PATENTE,1));
LN_PATENTE_BRASIL    = LOG(SUM(PATENTE_BRASIL,1));
LN_PATENTE_EXTERIOR  = LOG(SUM(PATENTE_EXTERIOR,1));
t = 2022-ANO;

IF PETRO_PETRO>0 OR CENPES_LATTES>0 THEN PETRO=1;
ELSE PETRO=0;
RUN;


/*----------------------------------------------------------------*/
/*--                                                            --*/
/*----------------------------------------------------------------*/


%MACRO FREQ(TRAT,CATEG);
PROC SQL NOPRINT;
CREATE TABLE TEMP AS 
SELECT &CATEG.,&TRAT.,COUNT(*) AS TOTAL 
FROM SURVIV.TABELA_PETROX
GROUP BY &CATEG.,&TRAT. ORDER BY &CATEG.;
QUIT;
PROC TRANSPOSE DATA=TEMP OUT=TEMP(DROP=_NAME_ _LABEL_) PREFIX=TRAT_;
BY &CATEG.;
ID &TRAT.;
VAR TOTAL;
RUN;
%MEND FREQ;
%FREQ(ANP_LATTES,ANO);


/*---------------------------------------------------------------------*/
/*--                    MODELAGEM DOS DADOS                          --*/
/*---------------------------------------------------------------------*/
%MACRO LOGIT(DEP,YEAR);
ODS SELECT PARAMETERESTIMATES;
ODS OUTPUT PARAMETERESTIMATES=PARAM_&DEP.(DROP=DF STDERR WALDCHISQ _ESTTYPE_);
PROC LOGISTIC DATA=SURVIV.TABELA_PETROX;
CLASS UF_NASCN UF_PROFN GRANDE_AREAN SEXON VINCULON LOCAL_FORMACN EXCLUSIVA;
MODEL &DEP.(REF=FIRST)=LN_IDADE LN_COAUTOR LN_COAUTOR*T LN_CAPES LN_CAPES*T
                       UF_NASCN UF_PROFN GRANDE_AREAN SEXON VINCULON 
                       LOCAL_FORMACN EXCLUSIVA / LINK=LOGIT ;
OUTPUT OUT=SAIDA_&DEP. PROB=P;
RUN;

%MEND LOGIT;
%LOGIT(PETRO_PETRO);
%LOGIT(CENPES_LATTES);
%LOGIT(PETRO_LATTES);



%MACRO KS(DEP);
PROC NPAR1WAY DATA=SAIDA_&DEP. EDF NOPRINT;
CLASS &DEP.;
VAR P;
OUTPUT OUT=KS_&DEP.(KEEP=_VAR_ _D_ RENAME=(_D_=KS));
RUN;
%MEND KS;
%KS(CENPES_LATTES);
%KS(PETRO_LATTES);
%KS(PETRO_PETRO);


/*---------------------------------------------------------------------*/
/*--                   REGIÃO DE SUPORTE COMUM                       --*/
/*---------------------------------------------------------------------*/

%MACRO PREP(DEP);
PROC MEANS DATA=SAIDA_&DEP. NOPRINT NWAY;
WHERE &DEP.=0;
OUTPUT OUT=SUP_&DEP.(DROP=_FREQ_ _TYPE_) P90(P)=PROBSUP;
RUN;

PROC MEANS DATA=SAIDA_&DEP. NOPRINT NWAY;
WHERE &DEP.=1;
OUTPUT OUT=INF_&DEP.(DROP=_FREQ_ _TYPE_) P10(P)=PROBINF ;
RUN;

/*PROC SQL;
CREATE TABLE SAIDAX_&DEP. AS 
SELECT A.*,B.PROBSUP,C.PROBINF
FROM SAIDA_&DEP. AS A 
CROSS JOIN SUP_&DEP. AS B 
CROSS JOIN INF_&DEP. AS C ;
QUIT;*/

PROC SQL;
CREATE TABLE SAIDAX_&DEP. AS 
SELECT *,
       CASE WHEN &DEP.=1 THEN 1/P ELSE 1/(1-P) END AS PESO,
	   CASE WHEN &DEP.=1 THEN 1   ELSE P/(1-P) END AS PESOX       

FROM SAIDA_&DEP. 
WHERE P>=(SELECT PROBINF FROM INF_&DEP.) AND P<=(SELECT PROBSUP FROM SUP_&DEP.);
QUIT;

%MEND PREP;
%PREP(PETRO_PETRO);
%PREP(PETRO_LATTES);
%PREP(CENPES_LATTES);



/*---------------------------------------------------------------------*/
/*--                  CONFERÊNCIA DO TAMANHO DOS DADOS               --*/
/*---------------------------------------------------------------------*/

PROC SQL NOPRINT;
CREATE TABLE TEMP AS 
SELECT 'SAIDA_PETRO_PETRO'    AS ORG,COUNT(*) AS TOT FROM SAIDA_PETRO_PETRO   UNION
SELECT 'SAIDAX_PETRO_PETRO'   AS ORG,COUNT(*) AS TOT FROM SAIDAX_PETRO_PETRO  UNION
SELECT 'SAIDA_PETRO_LATTES'   AS ORG,COUNT(*) AS TOT FROM SAIDA_PETRO_LATTES  UNION
SELECT 'SAIDAX_PETRO_LATTES'  AS ORG,COUNT(*) AS TOT FROM SAIDAX_PETRO_LATTES UNION
SELECT 'SAIDA_CENPES_LATTES'  AS ORG,COUNT(*) AS TOT FROM SAIDA_CENPES_LATTES UNION
SELECT 'SAIDAX_CENPES_LATTES' AS ORG,COUNT(*) AS TOT FROM SAIDAX_CENPES_LATTES  
ORDER BY ORG;
QUIT;


PROC DATASETS LIBRARY=WORK NOPRINT;
DELETE SUP_:(GENNUM=ALL) PARAM_:(GENNUM=ALL) KS_:(GENNUM=ALL) INF_:(GENNUM=ALL);
RUN;

DATA TESTET(DROP=CENPES_LATTES PETRO_LATTES PETRO_PETRO);
RETAIN ArquivoXML;
LENGTH FONTE $10.;
SET SAIDAX_ANP_ANP(IN=A) SAIDAX_ANP_LATTES(IN=B) SAIDAX_CENPES_LATTES(IN=C)
    SAIDAX_PETRO_LAB(IN=D) SAIDAX_PETRO_LATTES(IN=E) SAIDAX_PETRO_PETRO(IN=F);
KEEP ArquivoXML PESO LN_IDADE LN_COAUTOR LN_LOC_TRAB LN_CAPES FONTE PESOX
     VINCULON LOCAL_FORMACN UF_NASCN GRANDE_AREAN DIRECAO SEXON TRAT
     CENPES_LATTES PETRO_LATTES PETRO_PETRO ;

     IF A THEN FONTE="CENPES_LATTES";
ELSE IF B THEN FONTE="PETRO_LATTES";
ELSE IF C THEN FONTE="PETRO_PETRO";

     IF A THEN TRAT=CENPES_LATTES;
ELSE IF B THEN TRAT=PETRO_LATTES;
ELSE IF C THEN TRAT=PETRO_PETRO;
RUN;


/*EQUALITY=EQUALITY*/
PROC SORT DATA=TESTET;BY FONTE;RUN;
ODS SELECT TTESTS;
ODS OUTPUT TTESTS=TTESTS(DROP=DF Method WHERE=(Variances="Unequal"));
PROC TTEST DATA=TESTET;
BY FONTE;
CLASS TRAT;
VAR LN_IDADE LN_COAUTOR LN_LOC_TRAB LN_CAPES VINCULON UF_PROFN EXCLUSIVA
    LOCAL_FORMACN UF_NASCN GRANDE_AREAN DIRECAO SEXON ;
WEIGHT PESOX;
RUN;






DATA TTESTS(DROP=Probt tValue2 Variances);
SET TTESTS;
tValue2=ROUND(tValue,0.01);
     IF Probt<=0.001 THEN tValue3=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"***");
ELSE IF Probt<=0.025 THEN tValue3=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"**");
ELSE IF Probt<=0.050 THEN tValue3=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"*");
ELSE                      tValue3=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"ns");
RUN;


PROC SORT DATA=TTESTS;BY Variable;RUN;
PROC TRANSPOSE DATA=TTESTS OUT=tValue_(DROP=_NAME_ _LABEL_) PREFIX=tValue_;
BY Variable;
VAR tValue3;
ID FONTE;
RUN;



/*---------------------------------------------------------------------*/
/*--             ATE: REGRESSÃO COM PESO PARA OBTER ATE              --*/
/*---------------------------------------------------------------------*/

%MACRO ATE(VAR,TRAT);
ODS SELECT PARAMETERESTIMATES;
ODS OUTPUT PARAMETERESTIMATES=BET_&VAR.(KEEP=Dependent Estimate Probt tValue Variable WHERE=(Variable="&TRAT."));
PROC REG DATA=SAIDAX_&TRAT.;
MODEL &VAR. = &TRAT. T;
WEIGHT PESO;
RUN;QUIT;

DATA BET_&VAR.(DROP=Probt tValue tValue2);SET BET_&VAR.(RENAME=(Estimate=&TRAT.));
tValue2=ROUND(tValue,0.01);
     IF Probt<=0.001 THEN t_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"***");
ELSE IF Probt<=0.025 THEN t_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"**");
ELSE IF Probt<=.050  THEN t_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"*");
ELSE                      t_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"ns");
RUN;
%MEND ATE;
%ATE(LN_ARTIGOS          ,CENPES_LATTES);
%ATE(LN_ARTIGO_BRASIL    ,CENPES_LATTES);
%ATE(LN_ARTIGO_EXTERIOR  ,CENPES_LATTES);
%ATE(LN_LIVRO            ,CENPES_LATTES);
%ATE(LN_LIVRO_BRASIL     ,CENPES_LATTES);
%ATE(LN_LIVRO_EXTERIOR   ,CENPES_LATTES);
%ATE(LN_PATENTE          ,CENPES_LATTES);
%ATE(LN_PATENTE_BRASIL   ,CENPES_LATTES);
%ATE(LN_PATENTE_EXTERIOR ,CENPES_LATTES);

DATA ATE_CENPES_LATTES(DROP=Variable);SET BET_LN:;RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE BET_LN_:(GENNUM=ALL);
RUN;

%ATE(LN_ARTIGOS          ,PETRO_LATTES);
%ATE(LN_ARTIGO_BRASIL    ,PETRO_LATTES);
%ATE(LN_ARTIGO_EXTERIOR  ,PETRO_LATTES);
%ATE(LN_LIVRO            ,PETRO_LATTES);
%ATE(LN_LIVRO_BRASIL     ,PETRO_LATTES);
%ATE(LN_LIVRO_EXTERIOR   ,PETRO_LATTES);
%ATE(LN_PATENTE          ,PETRO_LATTES);
%ATE(LN_PATENTE_BRASIL   ,PETRO_LATTES);
%ATE(LN_PATENTE_EXTERIOR ,PETRO_LATTES);
DATA ATE_PETRO_LATTES(DROP=Variable);SET BET_LN:;RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE BET_LN_:(GENNUM=ALL);
RUN;

%ATE(LN_ARTIGOS          ,PETRO_PETRO);
%ATE(LN_ARTIGO_BRASIL    ,PETRO_PETRO);
%ATE(LN_ARTIGO_EXTERIOR  ,PETRO_PETRO);
%ATE(LN_LIVRO            ,PETRO_PETRO);
%ATE(LN_LIVRO_BRASIL     ,PETRO_PETRO);
%ATE(LN_LIVRO_EXTERIOR   ,PETRO_PETRO);
%ATE(LN_PATENTE          ,PETRO_PETRO);
%ATE(LN_PATENTE_BRASIL   ,PETRO_PETRO);
%ATE(LN_PATENTE_EXTERIOR ,PETRO_PETRO);
DATA ATE_PETRO_PETRO(DROP=Variable);SET BET_LN:;RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE BET_LN_:(GENNUM=ALL);
RUN;


PROC SORT DATA=ATE_CENPES_LATTES;BY Dependent;RUN;
PROC SORT DATA=ATE_PETRO_PETRO  ;BY Dependent;RUN;
PROC SORT DATA=ATE_PETRO_LATTES ;BY Dependent;RUN;

DATA ATE;
RETAIN Dependent CENPES_LATTES T_CENPES_LATTES PETRO_LATTES T_PETRO_LATTES PETRO_PETRO T_PETRO_PETRO;
MERGE ATE_CENPES_LATTES ATE_PETRO_PETRO ATE_PETRO_LATTES;
BY Dependent;
RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE ATE_:(GENNUM=ALL);
RUN;



/*---------------------------------------------------------------------*/
/*--             ATT: REGRESSÃO COM PESO PARA OBTER ATT              --*/
/*---------------------------------------------------------------------*/
%MACRO ATT(VAR,TRAT);
ODS SELECT PARAMETERESTIMATES;
ODS OUTPUT PARAMETERESTIMATES=BET_&VAR.(KEEP=Dependent Estimate Probt tValue Variable WHERE=(Variable="&TRAT."));
PROC REG DATA=SAIDAX_&TRAT.;
MODEL &VAR. = &TRAT.;
WEIGHT PESOX;
RUN;

DATA BET_&VAR.(DROP=Probt tValue tValue2);SET BET_&VAR.(RENAME=(Estimate=&TRAT.));
tValue2=ROUND(tValue,0.01);
     IF Probt<=0.001 THEN T_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"***");
ELSE IF Probt<=0.025 THEN T_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"**");
ELSE IF Probt<=.050  THEN T_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"*");
ELSE                      T_&TRAT.=COMPRESS(INPUT(COMPRESS(tValue2),$5.)||"ns");
RUN;
%MEND ATT;
%ATT(LN_ARTIGOS          ,CENPES_LATTES);
%ATT(LN_ARTIGO_BRASIL    ,CENPES_LATTES);
%ATT(LN_ARTIGO_EXTERIOR  ,CENPES_LATTES);
%ATT(LN_LIVRO            ,CENPES_LATTES);
%ATT(LN_LIVRO_BRASIL     ,CENPES_LATTES);
%ATT(LN_LIVRO_EXTERIOR   ,CENPES_LATTES);
%ATE(LN_PATENTE          ,CENPES_LATTES);
%ATT(LN_PATENTE_BRASIL   ,CENPES_LATTES);
%ATT(LN_PATENTE_EXTERIOR ,CENPES_LATTES);

DATA ATT_CENPES_LATTES(DROP=Variable);SET BET_LN:;RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE BET_LN_:(GENNUM=ALL);
RUN;

%ATT(LN_ARTIGOS          ,PETRO_LATTES);
%ATT(LN_ARTIGO_BRASIL    ,PETRO_LATTES);
%ATT(LN_ARTIGO_EXTERIOR  ,PETRO_LATTES);
%ATT(LN_LIVRO            ,PETRO_LATTES);
%ATT(LN_LIVRO_BRASIL     ,PETRO_LATTES);
%ATT(LN_LIVRO_EXTERIOR   ,PETRO_LATTES);
%ATT(LN_PATENTE          ,PETRO_LATTES);
%ATT(LN_PATENTE_BRASIL   ,PETRO_LATTES);
%ATT(LN_PATENTE_EXTERIOR ,PETRO_LATTES);
DATA ATT_PETRO_LATTES(DROP=Variable);SET BET_LN:;RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE BET_LN_:(GENNUM=ALL);
RUN;

%ATT(LN_ARTIGOS          ,PETRO_PETRO);
%ATT(LN_ARTIGO_BRASIL    ,PETRO_PETRO);
%ATT(LN_ARTIGO_EXTERIOR  ,PETRO_PETRO);
%ATT(LN_LIVRO            ,PETRO_PETRO);
%ATT(LN_LIVRO_BRASIL     ,PETRO_PETRO);
%ATT(LN_LIVRO_EXTERIOR   ,PETRO_PETRO);
%ATT(LN_PATENTE          ,PETRO_PETRO);
%ATT(LN_PATENTE_BRASIL   ,PETRO_PETRO);
%ATT(LN_PATENTE_EXTERIOR ,PETRO_PETRO);
DATA ATT_PETRO_PETRO(DROP=Variable);SET BET_LN:;RUN;

PROC DATASETS LIBRARY=WORK NOPRINT;DELETE BET_LN_:(GENNUM=ALL);
RUN;


PROC SORT DATA=ATT_CENPES_LATTES;BY Dependent;RUN;
PROC SORT DATA=ATT_PETRO_PETRO  ;BY Dependent;RUN;
PROC SORT DATA=ATT_PETRO_LATTES ;BY Dependent;RUN;

DATA ATT;
RETAIN Dependent CENPES_LATTES T_CENPES_LATTES PETRO_LATTES T_PETRO_LATTES PETRO_PETRO T_PETRO_PETRO;
MERGE ATT_CENPES_LATTES ATT_PETRO_PETRO ATT_PETRO_LATTES;
BY Dependent;
RUN;


PROC DATASETS LIBRARY=WORK NOPRINT;DELETE ATT_:(GENNUM=ALL);
RUN;
